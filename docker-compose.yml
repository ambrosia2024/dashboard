services:
  ambrosia_postgres:
#    image: postgres:latest
    image: postgis/postgis:16-3.4
    container_name: ambrosia_pg_db
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      retries: 5
      start_period: 30s
    volumes:
      - ambrosia_pg_db_data:/var/lib/postgresql/data
    networks:
      - ambrosia_network

  ambrosia_pgadmin:
    image: dpage/pgadmin4
    container_name: ambrosia_pgadmin
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5050:80"
    depends_on:
      - ambrosia_postgres
    networks:
      - ambrosia_network

  ambrosia_dashboard:
    image: ghcr.io/ambrosia2024/ambrosia-dashboard:latest
    container_name: ambrosia_dashboard
    build: .
    restart: unless-stopped
    entrypoint: /app/entrypoint.sh
    env_file:
      - .env
    environment:
      - RUNNING_IN_DOCKER=true
    depends_on:
      ambrosia_postgres:
        condition: service_healthy
    ports:
      - "8100:8000"
    volumes:
      - .:/app
      - ambrosia_static_volume:/app/staticfiles
    networks:
      - ambrosia_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/status" ]
      interval: 30s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  ambrosia_nginx:
    image: nginx:latest
    container_name: ambrosia_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ambrosia_static_volume:/app/staticfiles
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - ambrosia_dashboard
    networks:
      - ambrosia_network

volumes:
  ambrosia_static_volume:
  ambrosia_pg_db_data:

networks:
  ambrosia_network:
